library(dplyr)
create_data <- function(data_dir = '../data/') {
files <- list.files(data_dir, pattern = "^sub_.*\\.csv$", full.names = TRUE) # Ensure only CSV files are selected
nsubj <- length(files)
df <- data.frame()
for (i in 1:length(files)) {
# Check if the file is not empty
if (file.info(files[i])$size > 0) {
# Read sub data file
sub_df <- read.csv(files[i])
# Filter only rows that contain trials (i.e. omit blank rows or rows with no relevant info)
sub_df <- sub_df %>% filter(!is.na(trial_num))
# Check if the filtered dataframe is not empty
if (nrow(sub_df) > 0) {
# Select relevant columns + add "block" variable (block = 20 trials)
sub_df <- sub_df %>%
select(trial_num, participant, pair_type, choice_a, reward, correct) %>%
mutate(block = rep(1:(nrow(sub_df) / 20), each = 20))
df <- rbind(df, sub_df)
} else {
message(paste("Filtered dataframe is empty for file:", files[i]))
}
} else {
message(paste("File is empty:", files[i]))
}
}
df$correct <- ifelse(df$correct == "correct", 1, 0)
return(df)
}
dest_dir <- "G:/Shared drives/AdmonPsy - Fibro/RL/Data" # Update this to your actual data directory
create_data(data_dir = dest_dir)
files <- list.files(data_dir, pattern = "^sub_.*\\.csv$", full.names = TRUE) # Ensure only CSV files are selected
data_dir <- dest_dir
files <- list.files(data_dir, pattern = "^sub_.*\\.csv$", full.names = TRUE) # Ensure only CSV files are selected
nsubj <- length(files)
df <- data.frame()
for (i in 1:length(files)) {
# Check if the file is not empty
if (file.info(files[i])$size > 0) {
# Read sub data file
sub_df <- read.csv(files[i])
# Filter only rows that contain trials (i.e. omit blank rows or rows with no relevant info)
sub_df <- sub_df %>% filter(!is.na(trial_num))
# Check if the filtered dataframe is not empty
if (nrow(sub_df) > 0) {
# Select relevant columns + add "block" variable (block = 20 trials)
sub_df <- sub_df %>%
select(trial_num, participant, pair_type, choice_a, reward, correct) %>%
mutate(block = rep(1:(nrow(sub_df) / 20), each = 20))
df <- rbind(df, sub_df)
} else {
message(paste("Filtered dataframe is empty for file:", files[i]))
}
} else {
message(paste("File is empty:", files[i]))
}
}
df$correct <- ifelse(df$correct == "correct", 1, 0)
return(df)
df
ggplot(df, aes(x = trial_num, y = choice_a, color = pair_type_label)) +
geom_line() +
labs(title = "Choice A for Reversed and Non-reversed Pair Types",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y", ncol = 3)  # Facet by participant with free y-axis scales
library(ggplot2)
ggplot(df, aes(x = trial_num, y = choice_a, color = pair_type_label)) +
geom_line() +
labs(title = "Choice A for Reversed and Non-reversed Pair Types",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y", ncol = 3)  # Facet by participant with free y-axis scales
ggplot(df, aes(x = trial_num, y = choice_a, color = pair_type )) +
geom_line() +
labs(title = "Choice A for Reversed and Non-reversed Pair Types",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y", ncol = 3)  # Facet by participant with free y-axis scales
ggplot(df, aes(x = trial_num, y = choice_a, color = pair_type )) +
geom_line() +
labs(title = "Choice A for Reversed and Non-reversed Pair Types",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")
df
sub_df %>%
group_by(participant) %>%
summarize(correct_count = sum(choice_a == 1, na.rm = TRUE))
filtered_data <- sub_df %>%
filter(!is.na(choice_a))
filtered_data <- df %>%
filter(!is.na(choice_a))
filtered_data <- df %>%
filter(choice_a ==0)
ggplot(filtered_data, aes(x = trial_num, y = choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
filtered_data
filtered_data <- df %>%
filter(!choice_a ==0)
ggplot(filtered_data, aes(x = trial_num, y = choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
filtered_data
df
df_1 <- df %>%
group_by(participant) %>%
mutate(cumulative_choice_a = cumsum(choice_a))
df_1
ggplot(df_1, aes(x = trial_num, y = choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
ggplot(df_1, aes(x = trial_num, y = cumulative_choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df_1 <- df %>%
group_by(participant, pair_type) %>%
mutate(cumulative_choice_a = cumsum(choice_a))
df_1
ggplot(df_1, aes(x = trial_num, y = cumulative_choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df_1 <- df %>%
group_by(participant, pair_type) %>%
mutate(choice_a_percentile = percent_rank(choice_a))
ggplot(df_1, aes(x = trial_num, y = cumulative_choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
ggplot(df_1, aes(x = trial_num, y = choice_a_percentile, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df_1
ggplot(df_1, aes(x = trial_num, y = cumulative_choice_a_percentile, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
ggplot(df_1, aes(x = trial_num, y = cumulative_choice_a_percentile, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df_1 <- df %>%
group_by(participant, pair_type) %>%
mutate(cumulative_choice_a_percentile = cumsum(percent_rank(choice_a)))
ggplot(df_1, aes(x = trial_num, y = cumulative_choice_a_percentile, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df
df_1 <- df %>%
group_by(participant, pair_type) %>%
mutate(percentage_choice_a = cumsum(choice_a == 1) / row_number() * 100)
ggplot(df_1, aes(x = trial_num, y = percentage_choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df_1 <- df %>%
group_by(participant) %>%
mutate(percentage_choice_a = cumsum(choice_a == 1) / row_number() * 100)
ggplot(df_1, aes(x = trial_num, y = percentage_choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
df_1 <- df %>%
group_by(participant, pair_type) %>%
mutate(percentage_choice_a = cumsum(choice_a == 1) / row_number() * 100)
ggplot(df_1, aes(x = trial_num, y = percentage_choice_a, color = pair_type )) +
geom_line() +
labs(title = "",
x = "Trial Number", y = "Choice A") +
scale_color_manual(values = c("blue", "red"), labels = c("Non-reversed", "Reversed")) +  # Customize colors and labels
theme_minimal() +
facet_wrap(~ participant, scales = "free_y")  # Facet by participant with free y-axis scales
